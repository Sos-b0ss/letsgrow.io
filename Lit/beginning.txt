
This is meant to be the beginning few steps for planning out the webapp and make sure we choose the right stack:

	- List design features we plan to use.
	- Design backend [RESTAPI]
	- Determine TTM for the tool, and how long we should allow ourselves for each step.
	- Calculate the anticipated storage space that will be necessary and the cost of it.
	- If the goal is to make profit off the web-app, we need to calculate how much we should be expecting to earn.

		** Great resource to research Any tools alternatives: https://www.educba.com

--------------------------------------------------------------------------------------------------------------------------------------------------------

	Research utilities for development, and where to focus
	(anything with a * is reference for future dev.)

--------------------------------------------------------------------------------------------------------------------------------------------------------

Source: https://rubygarage.org/blog/technology-stack-for-web-development

	- Front-end:	 	 JavaScript [React], SASS*, Webpack*		 [SET]
	- Back-end:	 	 python, RESTAPI 			 	 [SET]
	- Security:		 kibana*					 [TBD] 
	- Storage:		 Cloud (linode) Hybrid	 			 [SET]
	- Web-server:		 Nginx*						 [TBD]
	- Host:			 AWS*, Linode				         [SET]
	- Automation Framework:	 Jest*, RSpec*		 	 	 	 [TBD]
	- Repository:		 Github		 			 	 [SET]

	- Utilities:		 Twitter, Cloudflare CDN, Cloudflare Web Optimization, G suite, Cloudflare Security, Gmail for business

-------------------------------------------------------------------------------------------------------------------------------------------------------

	- Key Points:

		- Create goals towards making something easy to test, however with a low Development cost
		- documentation
		- Developer availability (general maintainance after launch, and development)
		- Determine Scalability (Vertical/Horizontal)

--------------------------------------------------------------------------------------------------------------------------------------------------------

	- Research successful web apps stack choices:

		- PcPartPicker: [ Js | Rust | Django | Python ]
		- Shopify: [ Js | React.js | Nginx | Ruby | Rails | MySQL | Redis | Memcached ]
		- AirBnB: [ Js | React.js | Nginx | Ruby | Rails | Java | MySQL | Redis ]
		- Quora: [ Js | Zepto.js | Nginx | Python | Pylons | MySQL | Memcached ]
		- Instagram: [ Js | React.js | Nginx | Python | Django | PostgreSQL | Redis ]
		- Product Hunt: [ Js | React.js | Nginx | Ruby | Rails | Node.js | PostgreSQL | Redis ]
		- Pinterest: [Js | React.js | Nginx | Python | Django | Java | MySQL | Redis ]
		- CodeCademy: [ Js | React.js | Nginx | Ruby | Rails | MongoDB | Redis ]
		- Reddit: [Js | React.js | jQuery | Nginx | Python | Flask | Node.js | PostgreSQL | Memcached ]
		- Facebook: [ Js | React.js | Apache | PHP | MySQL | Memcached ]
		- coursera: [ Bootstrap | Js | React.js | jQuery | Nginix | Python | Django | Scala | Play | MySQL ]

Source: https://www.reddit.com/r/learnprogramming/comments/8n1y62/what_kind_of_code_or_programming_is_used_on/
Source: https://www.reddit.com/r/learnprogramming/comments/qezk6p/free_online_coding_platforms_to_learn_and_improve/

