
This is meant to be the beginning few steps for planning out the webapp and make sure we choose the right stack:

	- Determine TTM for the tool, and how long we should allow ourselves for each step.
	- What jobs will neet to be outsourced and what directions will each one take the webapp.
	- Find out how complex the backend data basing will be for this tool and how much computation will need to happen.
	- Calculate the anticipated storage space that will be necessary and the cost of it.
	- Should the webapp be solely developed in the cloud or should it be a hybrid of on-prem and cloud.
	- If the goal is to make profit off the web-app, we need to calculate how much we should be expecting to earn.
	- We need to decide on what tech stack the app should be ran on starting with:

		** Great resource to research Any tools alternatives: https://www.educba.com

--------------------------------------------------------------------------------------------------------------------------------------------------------

	Research utilities for development, and where to focus
	(anything with a * is a good place to start with development)

--------------------------------------------------------------------------------------------------------------------------------------------------------

Source: https://rubygarage.org/blog/technology-stack-for-web-development

	- Programming:		 Ruby*, JavaScript*, Angular.js			 [TBD]
	- Database storage:	 PostgreSQL, mySQL*, MongoDB			 [TBD]
	- Front-end language:	 HTML5*, CSS3*, XSS*, SASS, Flutter, Bootstrap	 [TBD]
	- Back-end framework:	 Express, Django, Rails, Laravel, Spring, .Net	 [TBD]
	- Back-end language:	 PHP, Java, python, C++, Node.js		 [TBD]
	- Security:		 kibana*, Grafana, Graylog, Databox, Looker	 [TBD] 
	- Storage:		 Cloud, Remote-Site, In-house, Hybrid*, Redis*	 [TBD]
	- App framework:	 Trailblazer*, Active admin*			 [TBD]
	- Web-server:		 Nginx*						 [TBD]
	- Web-app server:	 Puma*						 [TBD]
	- Host:			 AWS, Azure*, Linode				 [TBD]
	- Automation Framework:	 Jest*, Enzyme*, Chai*, RSpec*, Capybara*	 [TBD]
	- JavaScript Framework:	 React*, Redux*, jQuery				 [TBD]
	- Repository:		 GitLab, Github*, BitBucket			 [TBD]

	- Utilities:		 Twitter, Cloudflare CDN, Cloudflare Web Optimization, G suite, Cloudflare Security, Gmail for business

-------------------------------------------------------------------------------------------------------------------------------------------------------

	- Key Points:

		- We are working on a Mid-Level webapp, plan ahead as such
		- Out-of-the-bx Solutions (ex. open-source librarys like with Ruby on Rails/Gems)
		- Developer availability (general maintainance after launch, and development)
		- Rich documentation tools, and utilization of open source libraries
		- Create goals towards making something easy to test, however with a low Development cost
		- Determine Scalability (Vertical/Horizontal)
		- <25 employees would likely be needed once webapp is initilized and live

--------------------------------------------------------------------------------------------------------------------------------------------------------

	- Research successful web apps stack choices:

		- PcPartPicker: [ Js | Rust | Django | Python ]
		- Shopify: [ Js | React.js | Nginx | Ruby | Rails | MySQL | Redis | Memcached ]
		- AirBnB: [ Js | React.js | Nginx | Ruby | Rails | Java | MySQL | Redis ]
		- Quora: [ Js | Zepto.js | Nginx | Python | Pylons | MySQL | Memcached ]
		- Instagram: [ Js | React.js | Nginx | Python | Django | PostgreSQL | Redis ]
		- Product Hunt: [ Js | React.js | Nginx | Ruby | Rails | Node.js | PostgreSQL | Redis ]
		- Pinterest: [Js | React.js | Nginx | Python | Django | Java | MySQL | Redis ]
		- CodeCademy: [ Js | React.js | Nginx | Ruby | Rails | MongoDB | Redis ]
		- Reddit: [Js | React.js | jQuery | Nginx | Python | Flask | Node.js | PostgreSQL | Memcached ]
		- Facebook: [ Js | React.js | Apache | PHP | MySQL | Memcached ]
		- coursera: [ Bootstrap | Js | React.js | jQuery | Nginix | Python | Django | Scala | Play | MySQL ]

Source: https://www.reddit.com/r/learnprogramming/comments/8n1y62/what_kind_of_code_or_programming_is_used_on/

	- To start with a super basic stripped down verion of the webapp to test database and web-security use:
		[ Js(Node.JS) | Django | Ruby | Rails | HTML5 ]

--------------------------------------------------------------------------------------------------------------------------------------------------------

	- Use educational resources:

Source: https://www.reddit.com/r/learnprogramming/comments/qezk6p/free_online_coding_platforms_to_learn_and_improve/
